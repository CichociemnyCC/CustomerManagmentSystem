@model IEnumerable<CRM_Duo_Creative.Models.Lead>

@{
    ViewData["Title"] = "Leady";
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
<h2>Leady</h2>
<a class="btn btn-success mb-3" asp-controller="Leads" asp-action="Create">➕ Dodaj Leada</a>
<form method="get" class="mb-3 d-flex gap-2 align-items-center">
    <input type="text" name="search" class="form-control" placeholder="Wyszukaj..." value="@ViewBag.Search" />
    <label for="pageSize">Wierszy na stronę:</label>
    <select name="pageSize" class="form-select w-auto" onchange="this.form.submit()">
        <option value="10" selected="@(ViewBag.PageSize == 10 ? "selected" : null)">10</option>
        <option value="25" selected="@(ViewBag.PageSize == 25 ? "selected" : null)">25</option>
        <option value="50" selected="@(ViewBag.PageSize == 50 ? "selected" : null)">50</option>
    </select>
    <button class="btn btn-primary" type="submit">Szukaj</button>
</form>

@{
    int page = ViewBag.Page;
    int pageSize = ViewBag.PageSize;
    int total = ViewBag.TotalItems;
    int from = total == 0 ? 0 : ((page - 1) * pageSize + 1);
    int to = Math.Min(page * pageSize, total);
}
<p>Wyświetlane @from - @to z @total leadów</p>
<table class="table">
    <thead>
        <tr>
            <th>Nazwa</th>
            <th>Pochodzenie</th>
            <th>Usługi</th>
            <th>Pakiety</th>
            <th>Numer umowy</th>
            <th>Start</th>
            <th>Koniec</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var lead in Model)
        {
            <tr>
                <td>@lead.ClientName</td>
                <td>@lead.Source</td>
                <td>@lead.Services</td>
                <td>@lead.Packages</td>
                <td>@lead.ContractNumber</td>
                <td>@lead.ServiceStartDate?.ToShortDateString()</td>
                <td>@lead.ServiceEndDate?.ToShortDateString()</td>
                <td>
                    <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@lead.Id">Edytuj</a>

                    <form asp-action="ConvertToClient" method="post" style="display:inline">
                        <input type="hidden" name="id" value="@lead.Id" />
                        <button type="submit" class="btn btn-sm btn-success">Dodaj do bazy klientów</button>
                    </form>
                    <form asp-action="Delete" asp-controller="Leads" method="post" style="display:inline;" onsubmit="return confirm('Czy na pewno chcesz usunąć tego leada?');">
                        <input type="hidden" name="id" value="@lead.Id" />
                        <button type="submit" class="btn btn-sm btn-danger">Usuń</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>

</table>
<nav>
    <ul class="pagination">
        <li class="page-item @(page == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = page - 1, pageSize = pageSize, search = ViewBag.Search })">Poprzednia</a>
        </li>
        <li class="page-item @((page * pageSize >= total) ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = page + 1, pageSize = pageSize, search = ViewBag.Search })">Następna</a>
        </li>
    </ul>
</nav>


<div id="message" class="alert alert-danger d-none"></div>

@section Scripts {
    <script>
        // Auto-zapisywanie przy zmianie pola
        document.querySelectorAll('.editable').forEach(input => {
            input.addEventListener('change', async function () {
                const row = this.closest('tr');
                const id = row.dataset.id;
                const field = this.dataset.field;
                const value = this.value;

                await fetch('/Leads/UpdateField', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id, fieldName: field, newValue: value })
                });
            });
        });

        // Konwersja do klienta
        document.querySelectorAll('.convert-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const row = this.closest('tr');
                const id = row.dataset.id;
                const response = await fetch('/Leads/ConvertToClient', { method: 'POST', body: new URLSearchParams({ id }) });

                const msg = document.getElementById("message");
                if (!response.ok) {
                    const errorText = await response.text();
                    msg.textContent = errorText;
                    msg.classList.remove("d-none");
                } else {
                    location.reload(); // odśwież stronę
                }
            });
        });
    </script>
}
