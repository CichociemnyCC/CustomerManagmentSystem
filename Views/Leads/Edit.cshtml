@model Lead
@{
    ViewData["Title"] = ViewContext.RouteData.Values["action"]?.ToString() == "Edit" ? "Edytuj Leada" : "Dodaj Leada";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="@ViewContext.RouteData.Values["action"]" method="post" data-val="false">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="mb-3">
        <label>Nazwa Klienta</label>
        <input asp-for="ClientName" class="form-control" required />
        <span asp-validation-for="ClientName" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Pochodzenie</label>
        <input asp-for="Source" class="form-control" required />
        <span asp-validation-for="Source" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Usługi</label>
        <select name="SelectedServices" class="form-select selectpicker" multiple data-live-search="true">
            @foreach (var s in ViewBag.Services as List<string>)
            {
                var selected = (Model?.Services?.Contains(s) == true) ? "selected" : "";
                @:<option value="@s" @selected>@s</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label>Pakiety</label>
        <select name="SelectedPackages" class="form-select selectpicker" multiple data-live-search="true">
            @foreach (var p in ViewBag.Packages as List<string>)
            {
                var selected = (Model?.Packages?.Contains(p) == true) ? "selected" : "";
                @:<option value="@p" @selected>@p</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label>Numer Umowy</label>
        <input asp-for="ContractNumber" class="form-control" />
        <span asp-validation-for="ContractNumber" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Osoba Kontaktowa</label>
        <input asp-for="ContactPerson" class="form-control" />
        <span asp-validation-for="ContactPerson" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Dane Kontaktowe</label>
        <input asp-for="ContactData" class="form-control" />
        <span asp-validation-for="ContactData" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Nadane Dostępy</label>
        <input asp-for="AccessGrantedBy" class="form-control" />
        <span asp-validation-for="AccessGrantedBy" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Konto Meta/ADS</label>
        <input asp-for="MetaAccount" class="form-control" />
        <span asp-validation-for="MetaAccount" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Ustalenia Meta/ADS</label>
        <input asp-for="MetaAgreement" class="form-control" />
        <span asp-validation-for="MetaAgreement" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Dane Lokalne</label>
        <input asp-for="LocalData" class="form-control" />
        <span asp-validation-for="LocalData" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label for="SocialWebGoogleDrive" class="form-label">Sociale / WWW / Dysk Google</label>
        <textarea asp-for="SocialWebGoogleDrive" class="form-control" rows="5" placeholder="Opis 1|https://link1.com&#10;Opis 2|https://link2.com"></textarea>
        <span asp-validation-for="SocialWebGoogleDrive" class="text-danger"></span>
        <small class="form-text text-muted">
            Wpisz każdy link w osobnej linii w formacie: <strong>Opis|https://adres</strong><br />
            Przykład:<br />
            Google Drive|https://drive.google.com/s/abc123<br />
            Strona WWW|https://example.com
        </small>
    </div>
    <div class="mb-3">
        <label>Data Rozpoczęcia Umowy</label>
        <div class="input-group" style="max-width: 250px;">
            <input asp-for="ServiceStartDate" 
                   id="serviceStartDate" 
                   name="ServiceStartDate" 
                   class="form-control" 
                   type="text"  
                  readonly />
           <span class="input-group-text bg-white" id="startIcon" style="cursor: pointer;">
               <i class="bi bi-calendar3" style="font-size: 1.5rem;"></i>
           </span>
       </div>
        <span asp-validation-for="ServiceStartDate" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Data Zakończenia Umowy</label>
        <div class="input-group" style="max-width: 250px;">
            <input asp-for="ServiceEndDate" 
                   id="serviceEndDate" 
                   name="ServiceEndDate" 
                   class="form-control" 
                   type="text"  
                   readonly />
           <span class="input-group-text bg-white" id="endIcon" style="cursor: pointer;">
               <i class="bi bi-calendar3" style="font-size: 1.5rem;"></i>
            </span>
        </div>
        <span asp-validation-for="ServiceEndDate" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label>Dodatkowe Informacje</label>
        <textarea asp-for="Notes" class="form-control"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Zapisz</button>
</form>

<a class="btn btn-secondary mt-2" href="@Url.Action("Index")">Powrót Do Listy</a>
@section Scripts {
    <script>
      $(function(){
        $("input, textarea").removeAttr("data-val").removeAttr("data-val-required");
        $('.selectpicker').selectpicker?.();
      });

      const startInput = document.getElementById("serviceStartDate");
      const endInput   = document.getElementById("serviceEndDate");

      // Wymuś ISO z modelu (żeby nie było starych wartości w dd.MM.yyyy)
      startInput.value = '@(Model?.ServiceStartDate.HasValue == true ? Model.ServiceStartDate.Value.ToString("yyyy-MM-dd") : "")';
      endInput.value   = '@(Model?.ServiceEndDate.HasValue   == true ? Model.ServiceEndDate.Value.ToString("yyyy-MM-dd")   : "")';

      // JEDNA inicjalizacja flatpickr na każde pole
      const fpStart = flatpickr(startInput, {
        altInput: true,           // użytkownik widzi PL
        altFormat: "d.m.Y",
        dateFormat: "Y-m-d",      // do serwera leci ISO
        allowInput: false,
        onChange: function (selectedDates) {
          if (selectedDates.length > 0) {
            fpEnd.set("minDate", selectedDates[0]);
            const endDate = fpEnd.selectedDates[0];
            if (endDate && endDate < selectedDates[0]) fpEnd.clear();
          } else {
            fpEnd.set("minDate", null);
          }
        }
      });

      const fpEnd = flatpickr(endInput, {
        altInput: true,
        altFormat: "d.m.Y",
        dateFormat: "Y-m-d",
        allowInput: false
      });

      // Ustaw daty z value (jeśli są)
      if (startInput.value) fpStart.setDate(startInput.value, true, "Y-m-d");
      if (endInput.value)   fpEnd.setDate(endInput.value,   true, "Y-m-d");

      // Ikony
      document.getElementById("startIcon").addEventListener("click", () => fpStart.open());
      document.getElementById("endIcon").addEventListener("click",   () => fpEnd.open());

      // Bezpiecznik przed submit (gdyby coś jednak wpisało dd.MM.yyyy do value)
      function toIsoIfPolishFmt(v){
        if(!v) return v;
        const m = v.trim().match(/^(\d{1,2})\.(\d{1,2})\.(\d{4})$/);
        if(!m) return v;
        const dd = m[1].padStart(2,'0'), mm = m[2].padStart(2,'0'), yyyy = m[3];
        return `${yyyy}-${mm}-${dd}`;
      }
      $('form').on('submit', function(){
        startInput.value = toIsoIfPolishFmt(startInput.value);
        endInput.value   = toIsoIfPolishFmt(endInput.value);
      });
    </script>
}
